/*
 * This file was generated by the Gradle 'init' task.
 */

buildscript {
    ext {}
    repositories {
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    dependencies {
        classpath 'com.bmuschko:gradle-cargo-plugin:2.9.0'
        classpath 'org.eclipse.persistence:eclipselink:2.7.10'
        classpath 'jakarta.ws.rs:jakarta.ws.rs-api:2.1.6'
        classpath 'com.google.cloud.tools:jib-layer-filter-extension-gradle:0.3.0'
    }
}

plugins {
    id 'java'
    id 'maven-publish'
    id 'eclipse'
    id 'org.springframework.boot' version '2.5.3'
}

repositories {
    mavenCentral()
    maven { url = uri('https://repo.maven.apache.org/maven2') }
    jcenter()
}

dependencies {
    // providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")

    implementation (
        'org.springframework.security:spring-security-jwt:1.1.0.RELEASE',
        'org.springframework.boot:spring-boot-starter-web:2.5.3',
        'org.springframework.boot:spring-boot-starter-cache:2.1.18.RELEASE',
        'org.springframework.boot:spring-boot-starter-data-jpa:2.5.3',
        'org.springframework.security:spring-security-crypto:4.2.15.RELEASE',
        'org.springframework.security.oauth:spring-security-oauth2:2.4.1.RELEASE',

        'org.json:json:20190722',
        'org.eclipse.persistence:org.eclipse.persistence.jpa:2.7.10',
        'org.hibernate:hibernate-jpamodelgen:5.4.17.Final',
        'joda-time:joda-time:2.10.6',
        'org.apache.commons:commons-lang3:3.3.2',
        'com.zaxxer:HikariCP:3.4.5',
        'mysql:mysql-connector-java:8.0.28',
        'net.sf.ehcache:ehcache:2.10.6',
        'net.sf.supercsv:super-csv:2.4.0',
        'com.amazonaws:aws-java-sdk:1.11.486',
        'com.azure:azure-storage-blob:12.12.0',
        'commons-io:commons-io:2.4',
        'org.liquibase:liquibase-core:4.9.1',
        'org.apache.commons:commons-collections4:4.0',
        'com.google.guava:guava:31.1-jre',
        'com.google.code.gson:gson:2.9.0',
        'org.glassfish.jersey.media:jersey-media-multipart:2.35',
    )
    implementation('org.springframework.boot:spring-boot-starter-data-jpa') {
        exclude group: 'org.hibernate'
    }

    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    annotationProcessor 'org.hibernate:hibernate-jpamodelgen:5.4.17.Final'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'junit:junit:4.11'
}

group = 'org.apache.fineract'
version = '1.0.0-SNAPSHOT'

sourceSets {
    generated {
        java {
            srcDirs = ['src/generated/java']
        }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.annotationProcessorGeneratedSourcesDirectory = file("src/generated/java")
}

springBoot {
    mainClass = 'org.apache.fineract.ServerApplication'
}


compileJava.doLast {
    def mainSS = sourceSets.main
    def source = mainSS.java.classesDirectory.get()
    copy {
        from file("src/main/resources/jpa/persistence.xml")
        into "${source}/META-INF/"
    }
    javaexec {
        description = 'Performs EclipseLink static weaving of entity classes'
        def target = source
        main 'org.eclipse.persistence.tools.weaving.jpa.StaticWeave'
        args '-persistenceinfo', source, '-classpath', configurations.runtimeClasspath, source, target
        classpath configurations.runtimeClasspath
    }
    delete {
        delete "${source}/META-INF/persistence.xml"
    }
}
